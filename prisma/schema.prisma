// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String          @id @default(uuid())
  name           String
  email          String          @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  accommodations Accommodation[]
  tourism        Tourism[]
  Shopping       Shopping[]
  Nightlife      Nightlife[]
  Food_Drink     Food_Drink[]
}

model Category {
  id             String          @id @default(uuid())
  name           String          @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  accommodations Accommodation[]
  tourisms       Tourism[]
  Shopping       Shopping[]
  Nightlife      Nightlife[]
  Food_Drink     Food_Drink[]
}

model Accommodation {
  id          String            @id @default(uuid())
  title       String
  address     String
  local_govt  String
  description String
  imageUrls   String[]
  slug        String            @unique
  type        AccommodationType
  category    CategoryType
  user        User              @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  Category    Category?         @relation(fields: [categoryId], references: [id])
  categoryId  String?

  @@unique([id, slug])
}

model Tourism {
  id          String       @id @default(uuid())
  title       String
  address     String
  local_govt  String
  description String
  imageUrls   String[]
  slug        String       @unique
  category    CategoryType
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  String?

  @@unique([id, slug])
}

model Shopping {
  id          String       @id @default(uuid())
  title       String
  address     String
  local_govt  String
  description String
  imageUrls   String[]
  slug        String       @unique
  type        ShoppingType
  category    CategoryType
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  String?

  @@unique([id, slug])
}

model Nightlife {
  id          String        @id @default(uuid())
  title       String
  address     String
  local_govt  String
  description String
  imageUrls   String[]
  slug        String        @unique
  type        NightlifeType
  category    CategoryType
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Category    Category?     @relation(fields: [categoryId], references: [id])
  categoryId  String?

  @@unique([id, slug])
}

model Food_Drink {
  id          String       @id @default(uuid())
  title       String
  address     String
  local_govt  String
  description String
  imageUrls   String[]
  slug        String       @unique
  category    CategoryType
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  String?

  @@unique([id, slug])
}

enum AccommodationType {
  AIRBNB
  APARTMENT
  HOTEL
  RESORT
}

enum ShoppingType {
  MALL
  MARKET
}

enum NightlifeType {
  CLUB
  LOUNGE
  BARS_CAFE
}

enum CategoryType {
  ACCOMMODATION
  TOURISM
  SHOPPING
  NIGHTLIFE
  FOOD_DRINKS
}
